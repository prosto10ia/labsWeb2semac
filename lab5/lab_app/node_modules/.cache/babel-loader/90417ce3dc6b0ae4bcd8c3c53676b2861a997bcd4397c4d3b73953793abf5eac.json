{"ast":null,"code":"var _jsxFileName = \"/Users/a1111/Study/6 sem/web/labs/labsWeb2semac/lab5/practicum_React/src/components/Table.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport TableHead from './TableHead';\nimport TableBody from './TableBody';\nimport Filter from './Filter';\n\n/*\n   компонент, выводящий на страницу таблицу (с пагинацией и фильтром)\n   пропсы:\n      data - данные для таблицы в виде массива объектов\n      amountRows - количество строк, видимых на странице\n      pagination - true/false, использовать ли пагинацию\n*/\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Table = props => {\n  _s();\n  const [dataTable, setDataTable] = useState(props.data);\n  const updateDataTable = value => setDataTable(value);\n  const [activePage, setActivePage] = useState(1);\n  const resetPage = () => setActivePage(1);\n\n  // количество страниц\n  const pagesCount = Math.ceil(dataTable.length / props.amountRows);\n  const changeActive = event => {\n    const num = Number(event.target.innerHTML);\n    setActivePage(num);\n  };\n\n  // генерируем номера страниц\n  const pages = Array.from({\n    length: pagesCount\n  }, (_, i) => i + 1).map(num => /*#__PURE__*/_jsxDEV(\"span\", {\n    className: num === activePage ? \"active\" : \"\",\n    onClick: changeActive,\n    children: num\n  }, num, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"\\u0424\\u0438\\u043B\\u044C\\u0442\\u0440\\u044B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      filtering: updateDataTable,\n      fullData: props.data,\n      resetPage: resetPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        head: Object.keys(props.data[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        body: dataTable,\n        amountRows: props.amountRows,\n        numPage: props.pagination ? activePage : 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), props.pagination && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: pages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(Table, \"sINhwqMVIoLzN+n6VH4G1SgF6Qk=\");\n_c = Table;\nexport default Table;\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["useState","TableHead","TableBody","Filter","jsxDEV","_jsxDEV","Fragment","_Fragment","Table","props","_s","dataTable","setDataTable","data","updateDataTable","value","activePage","setActivePage","resetPage","pagesCount","Math","ceil","length","amountRows","changeActive","event","num","Number","target","innerHTML","pages","Array","from","_","i","map","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","filtering","fullData","head","Object","keys","body","numPage","pagination","_c","$RefreshReg$"],"sources":["/Users/a1111/Study/6 sem/web/labs/labsWeb2semac/lab5/practicum_React/src/components/Table.js"],"sourcesContent":["import { useState } from \"react\";\nimport TableHead from './TableHead';\nimport TableBody from './TableBody';\nimport Filter from './Filter';\n\n/*\n   компонент, выводящий на страницу таблицу (с пагинацией и фильтром)\n   пропсы:\n      data - данные для таблицы в виде массива объектов\n      amountRows - количество строк, видимых на странице\n      pagination - true/false, использовать ли пагинацию\n*/\nconst Table = (props) => {\n\n    const [dataTable, setDataTable] = useState(props.data);\n    const updateDataTable = (value) => setDataTable(value);\n\n    const [activePage, setActivePage] = useState(1);\n\n    const resetPage = () => setActivePage(1);\n\n    // количество страниц\n    const pagesCount = Math.ceil(dataTable.length / props.amountRows);\n\n    const changeActive = (event) => {\n        const num = Number(event.target.innerHTML);\n        setActivePage(num);\n    };\n\n    // генерируем номера страниц\n    const pages = Array.from({length: pagesCount}, (_,i)=>i+1).map((num)=>(\n        <span key={num}\n              className={num===activePage ? \"active\" : \"\"}\n              onClick={changeActive}>{num}</span>\n    ));\n\n    return (\n      <>\n        <h4>Фильтры</h4>\n        <Filter filtering={updateDataTable}\n                fullData={props.data}\n                resetPage={resetPage}/>\n        <table>\n            <TableHead head={Object.keys(props.data[0])}/>\n            <TableBody body={dataTable}\n                       amountRows={props.amountRows}\n                       numPage={props.pagination ? activePage : 1}/>\n        </table>\n        { props.pagination &&\n        <div className=\"pagination\">\n            {pages}\n        </div>}\n      </>\n    );\n};\n\nexport default Table;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}