{"ast":null,"code":"var _jsxFileName = \"/Users/a1111/Study/6 sem/web/labs/labsWeb2semac/lab6/lab_app/src/components/TableBody.js\";\nimport TableRow from './TableRow.js';\n\n/*\n   компонент, для вывода tbody таблицы\n   пропсы:\n      body - данные для таблицы в виде массива объектов\n      numPage - номер текущей страницы\n      amountRows - количество строк таблицы на странице\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TableBody = props => {\n  // номера строк, отображаемых на странице\n  const begRange = (props.numPage - 1) * props.amountRows;\n  const endRange = begRange + Number(props.amountRows);\n\n  //формируем строки на основе переданных данных\n  const tbody = props.body.map((item, index) =>\n  /*#__PURE__*/\n  // оставляем видимыми только строки, индексы которых принадлежат интервалу\n  _jsxDEV(\"tr\", {\n    className: index >= begRange && index < endRange ? \"show\" : \"hide\",\n    children: /*#__PURE__*/_jsxDEV(TableRow, {\n      row: Object.values(item),\n      isHead: \"0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }, this)\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"tbody\", {\n    children: tbody\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_c = TableBody;\nexport default TableBody;\nvar _c;\n$RefreshReg$(_c, \"TableBody\");","map":{"version":3,"names":["TableRow","jsxDEV","_jsxDEV","TableBody","props","begRange","numPage","amountRows","endRange","Number","tbody","body","map","item","index","className","children","row","Object","values","isHead","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/a1111/Study/6 sem/web/labs/labsWeb2semac/lab6/lab_app/src/components/TableBody.js"],"sourcesContent":["import TableRow from './TableRow.js';\n\n/*\n   компонент, для вывода tbody таблицы\n   пропсы:\n      body - данные для таблицы в виде массива объектов\n      numPage - номер текущей страницы\n      amountRows - количество строк таблицы на странице\n*/\n\nconst TableBody = (props) => {\n    // номера строк, отображаемых на странице\n    const begRange = (props.numPage - 1) * props.amountRows;\n    const endRange = begRange + Number(props.amountRows);\n\n    //формируем строки на основе переданных данных\n    const tbody = props.body.map((item, index) =>\n   // оставляем видимыми только строки, индексы которых принадлежат интервалу\n        <tr key={index} className={\n           (index >= begRange && index < endRange) ? \"show\" : \"hide\"\n        }> \n                <TableRow row={ Object.values(item) } isHead=\"0\"/>\n            </tr>\n        ); \n \n    return (\n        <tbody>\n            {tbody}\n        </tbody>\n    )\n}\n\nexport default TableBody;"],"mappings":";AAAA,OAAOA,QAAQ,MAAM,eAAe;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AANA,SAAAC,MAAA,IAAAC,OAAA;AAQA,MAAMC,SAAS,GAAIC,KAAK,IAAK;EACzB;EACA,MAAMC,QAAQ,GAAG,CAACD,KAAK,CAACE,OAAO,GAAG,CAAC,IAAIF,KAAK,CAACG,UAAU;EACvD,MAAMC,QAAQ,GAAGH,QAAQ,GAAGI,MAAM,CAACL,KAAK,CAACG,UAAU,CAAC;;EAEpD;EACA,MAAMG,KAAK,GAAGN,KAAK,CAACO,IAAI,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK;EAAA;EAC1C;EACKZ,OAAA;IAAgBa,SAAS,EACrBD,KAAK,IAAIT,QAAQ,IAAIS,KAAK,GAAGN,QAAQ,GAAI,MAAM,GAAG,MACrD;IAAAQ,QAAA,eACOd,OAAA,CAACF,QAAQ;MAACiB,GAAG,EAAGC,MAAM,CAACC,MAAM,CAACN,IAAI,CAAG;MAACO,MAAM,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC,GAHjDV,KAAK;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAIN,CACR,CAAC;EAEL,oBACItB,OAAA;IAAAc,QAAA,EACKN;EAAK;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEhB,CAAC;AAAAC,EAAA,GApBKtB,SAAS;AAsBf,eAAeA,SAAS;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}