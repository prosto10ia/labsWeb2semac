{"ast":null,"code":"var _jsxFileName = \"/Users/a1111/Study/6 sem/web/labs/labsWeb2semac/lab6/lab_app/src/components/Table.js\",\n  _s = $RefreshSig$();\nimport TableHead from './TableHead.js';\nimport TableBody from './TableBody.js';\nimport Filter from './Filter.js';\nimport { useState } from 'react';\n\n/*\n   компонент, выводящий на страницу таблицу с пагинацией\n   пропсы:\n      data - данные для таблицы в виде массива объектов\n      amountRows - количество строк на странице (опционально)\n      showPagination - флаг показа пагинации (по умолчанию true)\n*/\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Table = props => {\n  _s();\n  // для фильтрации\n  const [dataTable, setDataTable] = useState(props.data);\n  const updateDataTable = value => {\n    setDataTable(value);\n    props.onFilter(value);\n    setCurrentPage(1);\n  };\n\n  // хук для отображения текущей страницы\n  const [currentPage, setCurrentPage] = useState(1);\n\n  //обработчик события, в котором будем изменять currentPage\n  const changeCurrentPage = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n\n  // определяем, нужно ли показывать пагинацию\n  const showPagination = props.showPagination !== false;\n\n  // если пагинация отключена, показываем все строки\n  const amountRows = showPagination ? props.amountRows : props.data.length;\n\n  //количество страниц разбиения таблицы\n  const n = Math.ceil(dataTable.length / amountRows);\n\n  // массив с номерами страниц\n  const arr = Array.from({\n    length: n\n  }, (v, i) => i + 1);\n\n  //формируем совокупность span с номерами страниц\n  const pages = arr.map((item, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n    className: item === currentPage ? 'active' : '',\n    onClick: () => changeCurrentPage(item),\n    children: item\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Filter, {\n      filtering: updateDataTable,\n      data: dataTable,\n      fullData: props.data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        head: Object.keys(props.data[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        body: dataTable,\n        amountRows: amountRows,\n        numPage: showPagination ? currentPage : 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), showPagination && dataTable.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"numPages\",\n      children: pages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n_s(Table, \"uh6kkiTtyVwV6eRUGRLPXGuuUH8=\");\n_c = Table;\nexport default Table;\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["TableHead","TableBody","Filter","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Table","props","_s","dataTable","setDataTable","data","updateDataTable","value","onFilter","setCurrentPage","currentPage","changeCurrentPage","pageNumber","showPagination","amountRows","length","n","Math","ceil","arr","Array","from","v","i","pages","map","item","index","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","filtering","fullData","head","Object","keys","body","numPage","_c","$RefreshReg$"],"sources":["/Users/a1111/Study/6 sem/web/labs/labsWeb2semac/lab6/lab_app/src/components/Table.js"],"sourcesContent":["import TableHead from './TableHead.js';\nimport TableBody from './TableBody.js';\nimport Filter from './Filter.js';\nimport { useState } from 'react';\n\n/*\n   компонент, выводящий на страницу таблицу с пагинацией\n   пропсы:\n      data - данные для таблицы в виде массива объектов\n      amountRows - количество строк на странице (опционально)\n      showPagination - флаг показа пагинации (по умолчанию true)\n*/\n\nconst Table = (props) => {\n\n    // для фильтрации\n    const [dataTable, setDataTable] = useState(props.data);\n    const updateDataTable = (value) => {\n        setDataTable(value);\n        props.onFilter(value);\n        setCurrentPage(1);\n    };\n\n\t// хук для отображения текущей страницы\n    const [currentPage, setCurrentPage] = useState(1);\n\n    //обработчик события, в котором будем изменять currentPage\n    const changeCurrentPage = (pageNumber) => {\n        setCurrentPage(pageNumber);\n    };\n\n    // определяем, нужно ли показывать пагинацию\n    const showPagination = props.showPagination !== false;\n\n    // если пагинация отключена, показываем все строки\n    const amountRows = showPagination ? props.amountRows : props.data.length;\n\n\t//количество страниц разбиения таблицы\n    const n = Math.ceil(dataTable.length / amountRows);\n    \n    // массив с номерами страниц\n    const arr = Array.from({ length: n }, (v, i) => i + 1);\n    \n     //формируем совокупность span с номерами страниц\n    const pages = arr.map((item, index) =>  \n        <span \n            key={index} \n            className={item === currentPage ? 'active' : ''}\n            onClick={() => changeCurrentPage(item)}\n        > \n            {item} \n        </span>\n    );\n\n    return( \n      <>\n        <Filter \n            filtering={ updateDataTable } \n            data={ dataTable } \n            fullData={ props.data }\n        />\n\n        <table>\n            <TableHead head={ Object.keys(props.data[0]) } />\n            <TableBody \n                body={ dataTable } \n                amountRows={ amountRows } \n                numPage={showPagination ? currentPage : 1}\n            />\n        </table>\n\n\t    {showPagination && dataTable.length > 0 && (\n                <div className=\"numPages\">\n                    {pages}\n                </div>\n            )}\n\t  </>   \n    )   \n}\n\n\nexport default Table;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}