{"ast":null,"code":"var _jsxFileName = \"/Users/a1111/Study/6 sem/web/labs/labsWeb2semac/lab6/lab_app/src/components/ChartDraw.js\",\n  _s = $RefreshSig$();\nimport * as d3 from \"d3\";\nimport { useEffect, useMemo, useRef, useState } from \"react\"; // хуки\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChartDraw = ({\n  data,\n  oy,\n  chartType\n}) => {\n  _s();\n  // Получает props:\n  // - data: массив данных для отображения\n  // - oy: массив из двух boolean, какие метрики отображать (max/min)\n  // - chartType: тип графика ('scatter' или 'bar')\n\n  const chartRef = useRef(null);\n  const [width, setWidth] = useState(800); // ширина\n  const [height, setHeight] = useState(400); // высота\n\n  // получаем фактические размеры\n  useEffect(() => {\n    const svg = d3.select(chartRef.current);\n    setWidth(parseFloat(svg.style(\"width\")) || 800); // реальная ширина\n    setHeight(parseFloat(svg.style(\"height\")) || 400); // реальная высота\n  }, []);\n  const margin = {\n    top: 10,\n    bottom: 90,\n    left: 40,\n    right: 120\n  }; // отступы\n  const boundsWidth = width - margin.left - margin.right; // ширина\n  const boundsHeight = height - margin.top - margin.bottom; // высота\n\n  const allYValues = data.flatMap(d => {\n    const values = [];\n    if (oy[0]) values.push(d.values[0]); // max высота\n    if (oy[1]) values.push(d.values[1]); // min высота\n    return values;\n  });\n  const [min, max] = d3.extent(allYValues); // min/max среди всех значений\n\n  // формируем шкалы для осей\n  const scaleX = useMemo(() => {\n    return d3.scaleBand().domain(data.map(d => d.labelX)).range([0, boundsWidth]).padding(0.2);\n  }, [data, boundsWidth]);\n  const scaleY = useMemo(() => {\n    return d3.scaleLinear().domain([min * 0.85, max * 1.1]).range([boundsHeight, 0]);\n  }, [boundsHeight, min, max]);\n  useEffect(() => {\n    const svg = d3.select(chartRef.current);\n    svg.selectAll(\"*\").remove();\n\n    // рисуем оси\n    const xAxis = d3.axisBottom(scaleX);\n    svg.append(\"g\").attr(\"transform\", `translate(${margin.left}, ${height - margin.bottom})`).call(xAxis).selectAll(\"text\").style(\"text-anchor\", \"end\").attr(\"dx\", \"-.8em\").attr(\"dy\", \".15em\").attr(\"transform\", \"rotate(-30)\");\n    const yAxis = d3.axisLeft(scaleY);\n    svg.append(\"g\").attr(\"transform\", `translate(${margin.left}, ${margin.top})`).call(yAxis);\n\n    // легенда\n    const legend = svg.append(\"g\").attr(\"transform\", `translate(${width - margin.right + 20}, ${margin.top + 20})`);\n\n    // если отображаем максимумы\n    if (oy[0]) {\n      legend.append(\"rect\").attr(\"width\", 18).attr(\"height\", 18).attr(\"fill\", \"red\");\n      legend.append(\"text\").attr(\"x\", 24).attr(\"y\", 9).attr(\"dy\", \".35em\").text(\"Макс. высота\");\n    }\n    if (oy[1]) {\n      legend.append(\"rect\").attr(\"width\", 18).attr(\"height\", 18).attr(\"fill\", \"blue\").attr(\"y\", oy[0] ? 25 : 0);\n      legend.append(\"text\").attr(\"x\", 24).attr(\"y\", oy[0] ? 34 : 9).attr(\"dy\", \".35em\").text(\"Мин. высота\");\n    }\n\n    // точечная диаграмма\n    if (chartType === \"scatter\") {\n      data.forEach(d => {\n        const x = scaleX(d.labelX) + scaleX.bandwidth() / 2;\n        if (oy[0]) {\n          svg.append(\"circle\").attr(\"r\", 5).attr(\"cx\", x).attr(\"cy\", scaleY(d.values[0])).attr(\"transform\", `translate(${margin.left}, ${margin.top})`).style(\"fill\", \"red\");\n        }\n        if (oy[1]) {\n          svg.append(\"circle\").attr(\"r\", 5).attr(\"cx\", x).attr(\"cy\", scaleY(d.values[1])).attr(\"transform\", `translate(${margin.left}, ${margin.top})`).style(\"fill\", \"blue\");\n        }\n      });\n    } else if (chartType === \"bar\") {\n      // гистограмма\n      data.forEach(d => {\n        const x = scaleX(d.labelX);\n        const barWidth = scaleX.bandwidth() / (oy[0] && oy[1] ? 2 : 1);\n        if (oy[0]) {\n          svg.append(\"rect\").attr(\"x\", x).attr(\"y\", scaleY(d.values[0])).attr(\"width\", barWidth).attr(\"height\", boundsHeight - scaleY(d.values[0])).attr(\"transform\", `translate(${margin.left}, ${margin.top})`).attr(\"fill\", \"red\");\n        }\n        if (oy[1]) {\n          svg.append(\"rect\").attr(\"x\", x + (oy[0] ? barWidth : 0)).attr(\"y\", scaleY(d.values[1])).attr(\"width\", barWidth).attr(\"height\", boundsHeight - scaleY(d.values[1])).attr(\"transform\", `translate(${margin.left}, ${margin.top})`).attr(\"fill\", \"blue\");\n        }\n      });\n    }\n  }, [scaleX, scaleY, data, oy, chartType, width, height]);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    ref: chartRef,\n    width: 800,\n    height: 400\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 10\n  }, this);\n};\n_s(ChartDraw, \"SmjNgY7zH8eDX/0wUZTeiulQxJA=\");\n_c = ChartDraw;\nexport default ChartDraw;\nvar _c;\n$RefreshReg$(_c, \"ChartDraw\");","map":{"version":3,"names":["d3","useEffect","useMemo","useRef","useState","jsxDEV","_jsxDEV","ChartDraw","data","oy","chartType","_s","chartRef","width","setWidth","height","setHeight","svg","select","current","parseFloat","style","margin","top","bottom","left","right","boundsWidth","boundsHeight","allYValues","flatMap","d","values","push","min","max","extent","scaleX","scaleBand","domain","map","labelX","range","padding","scaleY","scaleLinear","selectAll","remove","xAxis","axisBottom","append","attr","call","yAxis","axisLeft","legend","text","forEach","x","bandwidth","barWidth","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/a1111/Study/6 sem/web/labs/labsWeb2semac/lab6/lab_app/src/components/ChartDraw.js"],"sourcesContent":["import * as d3 from \"d3\";\nimport { useEffect, useMemo, useRef, useState } from \"react\"; // хуки\n\nconst ChartDraw = ({ data, oy, chartType }) => {\n  // Получает props:\n  // - data: массив данных для отображения\n  // - oy: массив из двух boolean, какие метрики отображать (max/min)\n  // - chartType: тип графика ('scatter' или 'bar')\n\n  const chartRef = useRef(null);\n  const [width, setWidth] = useState(800); // ширина\n  const [height, setHeight] = useState(400); // высота\n\n  // получаем фактические размеры\n  useEffect(() => {\n    const svg = d3.select(chartRef.current);\n    setWidth(parseFloat(svg.style(\"width\")) || 800); // реальная ширина\n    setHeight(parseFloat(svg.style(\"height\")) || 400); // реальная высота\n  }, []);\n\n  const margin = { top: 10, bottom: 90, left: 40, right: 120 }; // отступы\n  const boundsWidth = width - margin.left - margin.right; // ширина\n  const boundsHeight = height - margin.top - margin.bottom; // высота\n\n  const allYValues = data.flatMap((d) => {\n    const values = [];\n    if (oy[0]) values.push(d.values[0]); // max высота\n    if (oy[1]) values.push(d.values[1]); // min высота\n    return values;\n  });\n\n  const [min, max] = d3.extent(allYValues); // min/max среди всех значений\n\n  // формируем шкалы для осей\n  const scaleX = useMemo(() => {\n    return d3\n      .scaleBand()\n      .domain(data.map((d) => d.labelX))\n      .range([0, boundsWidth])\n      .padding(0.2);\n  }, [data, boundsWidth]);\n\n  const scaleY = useMemo(() => {\n    return d3\n      .scaleLinear()\n      .domain([min * 0.85, max * 1.1])\n      .range([boundsHeight, 0]);\n  }, [boundsHeight, min, max]);\n\n  useEffect(() => {\n    const svg = d3.select(chartRef.current);\n    svg.selectAll(\"*\").remove();\n\n    // рисуем оси\n    const xAxis = d3.axisBottom(scaleX);\n    svg\n      .append(\"g\")\n      .attr(\"transform\", `translate(${margin.left}, ${height - margin.bottom})`)\n      .call(xAxis)\n      .selectAll(\"text\")\n      .style(\"text-anchor\", \"end\")\n      .attr(\"dx\", \"-.8em\")\n      .attr(\"dy\", \".15em\")\n      .attr(\"transform\", \"rotate(-30)\");\n\n    const yAxis = d3.axisLeft(scaleY);\n    svg\n      .append(\"g\")\n      .attr(\"transform\", `translate(${margin.left}, ${margin.top})`)\n      .call(yAxis);\n\n    // легенда\n    const legend = svg.append(\"g\")\n      .attr(\"transform\", `translate(${width - margin.right + 20}, ${margin.top + 20})`);\n\n    // если отображаем максимумы\n    if (oy[0]) {\n      legend.append(\"rect\")\n        .attr(\"width\", 18)\n        .attr(\"height\", 18)\n        .attr(\"fill\", \"red\");\n      legend.append(\"text\")\n        .attr(\"x\", 24)\n        .attr(\"y\", 9)\n        .attr(\"dy\", \".35em\")\n        .text(\"Макс. высота\");\n    }\n\n    if (oy[1]) {\n      legend.append(\"rect\")\n        .attr(\"width\", 18)\n        .attr(\"height\", 18)\n        .attr(\"fill\", \"blue\")\n        .attr(\"y\", oy[0] ? 25 : 0);\n      legend.append(\"text\")\n        .attr(\"x\", 24)\n        .attr(\"y\", oy[0] ? 34 : 9)\n        .attr(\"dy\", \".35em\")\n        .text(\"Мин. высота\");\n    }\n\n    // точечная диаграмма\n    if (chartType === \"scatter\") {\n      data.forEach((d) => {\n        const x = scaleX(d.labelX) + scaleX.bandwidth() / 2;\n        if (oy[0]) {\n          svg\n            .append(\"circle\")\n            .attr(\"r\", 5)\n            .attr(\"cx\", x)\n            .attr(\"cy\", scaleY(d.values[0]))\n            .attr(\"transform\", `translate(${margin.left}, ${margin.top})`)\n            .style(\"fill\", \"red\");\n        }\n        if (oy[1]) {\n          svg\n            .append(\"circle\")\n            .attr(\"r\", 5)\n            .attr(\"cx\", x)\n            .attr(\"cy\", scaleY(d.values[1]))\n            .attr(\"transform\", `translate(${margin.left}, ${margin.top})`)\n            .style(\"fill\", \"blue\");\n        }\n      });\n    } else if (chartType === \"bar\") { // гистограмма\n      data.forEach((d) => {\n        const x = scaleX(d.labelX);\n        const barWidth = scaleX.bandwidth() / (oy[0] && oy[1] ? 2 : 1);\n\n        if (oy[0]) {\n          svg\n            .append(\"rect\")\n            .attr(\"x\", x)\n            .attr(\"y\", scaleY(d.values[0]))\n            .attr(\"width\", barWidth)\n            .attr(\"height\", boundsHeight - scaleY(d.values[0]))\n            .attr(\"transform\", `translate(${margin.left}, ${margin.top})`)\n            .attr(\"fill\", \"red\");\n        }\n\n        if (oy[1]) {\n          svg\n            .append(\"rect\")\n            .attr(\"x\", x + (oy[0] ? barWidth : 0))\n            .attr(\"y\", scaleY(d.values[1]))\n            .attr(\"width\", barWidth)\n            .attr(\"height\", boundsHeight - scaleY(d.values[1]))\n            .attr(\"transform\", `translate(${margin.left}, ${margin.top})`)\n            .attr(\"fill\", \"blue\");\n        }\n      });\n    }\n  }, [scaleX, scaleY, data, oy, chartType, width, height]);\n\n  return <svg ref={chartRef} width={800} height={400} />;\n};\n\nexport default ChartDraw;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}